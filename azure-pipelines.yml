# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '825d6c6b-7011-4c27-9e50-775c320563d9'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  environmentName: 'cloudrestapp-d'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)
  
  # Python version: 3.7
  pythonVersion: '3.7'

  appType: 'webAppLinux'

stages:
- stage: Provision
  displayName: Create Infrastructure
  jobs:
  - job: Provision
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: PowerShell@2
      displayName: "Read parameters from JSON"
      name: GetProjectParameters
      inputs:
        pwsh: true
        filepath: "InfraSetupScripts/Read-Parameters.ps1"
        arguments: "-ParameterFilePath 'InfraSetupScripts/parameters.json'" 
    
    - task: AzureCLI@2
      displayName: "Create Resource Group"
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: "pscore"
        scriptLocation: "scriptPath"
        scriptPath: "InfraSetupScripts/Create-ResourceGroup.ps1"
        arguments: -ResourceGroupName $(ResourceGroupName) -Location $(Location)
        
    - task: AzureCLI@2
      displayName: "Create App Service plan"
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: "pscore"
        scriptLocation: "scriptPath"
        scriptPath: "InfraSetupScripts/Create-AppServicePlan.ps1"
        arguments: -ResourceGroupName $(ResourceGroupName) -ServicePlanName $(ServicePlanName)

    - task: AzureCLI@2
      displayName: "Create WebApp"
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: "pscore"
        scriptLocation: "scriptPath"
        scriptPath: "InfraSetupScripts/Create-AzureWebApp.ps1"
        arguments: -ResourceGroupName $(ResourceGroupName) -WebAppName $(WebAppName) -ServicePlanName $(ServicePlanName) -RunTime "$(RunTime)"

- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    - task: PythonScript@0
      displayName: 'Export project path'
      inputs:
        scriptSource: 'inline'
        script: |
          """Search all subdirectories for `manage.py`."""
          from glob import iglob
          from os import path
          # Python >= 3.5
          manage_py = next(iglob(path.join('**', 'manage.py'), recursive=True), None)
          if not manage_py:
              raise SystemExit('Could not find a Django project')
          project_location = path.dirname(path.abspath(manage_py))
          print('Found Django project in', project_location)
          print('##vso[task.setvariable variable=projectRoot]{}'.format(project_location))
    - script: |
        python -m pip install --upgrade pip setuptools wheel django
        pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: 'Install requirements'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop